package com.siri.que;

public class HanoiTest {
	
		// no 이동할원반(원반갯수), x 좌측기둥, y 우측기둥
		// 중간수 구하기
		// 1 2 3 의 중간값
		// = 전체 총합 - 왼쪽 - 오른쪽
		
		/*

		<중간(값)수 구하기>
		 - 조건 : 규칙적인(일정한) 수의 나열
		 
		 예)   1 2 3 의 중간값  : 2
		     -------
		     전체총합: 6
		     왼쪽     : 1
		     오른쪽  : 3   ===> 6-1-3  : 2
		     
		     4 5 6 7 8
		     ---------
		     전체총합: 30
		     왼쪽     : 9
		    오른쪽   : 15    ===> 30-9-15: 6 


		move (3, 1, 3)     {1,2,3}원반을 1막대  ---> 3막대
			 
			 move(2, 1, 2)   {1,2}원반을 1막대  ---> 2막대
			     move(1,1,3)   {1}원반을 1막대 --->  3막대  
			         >>> if문 false
			         >>>  1       1 ------> 3
			         >>> if문 false
			     >>> 2            1 ------> 2    
			     move(1,3,2)   {1}원반을 3막대 ---> 2막대
			     	 >>> if문 false
			         >>>  1       3 ------> 2
			         >>> if문 false
			--------------------------------------------------
			>>> 3                 1 ------> 3
			--------------------------------------------------
			move(2 ,2 ,3)
			     move(1, 2, 1)
			     	  >>> move() 대신 if문 false
			     	  >>> 1       2 ------> 1
			     	  >>> if문 false
			     >>> 2            2 ------> 3
			     move(1, 1, 3)
			     	  >>> move() 대신 if문 false
			     	  >>> 1       1 ------> 3
			     	  >>> if문 false			     
		*/	
	void move(int no, int x, int y) {
		
		if (no > 1) {
			move(no - 1, x, 6 - x - y);
		}
		System.out.println("[" + no + "원반 옮기기]>>[" + x + "]번기둥 ----> [" + y + "]번기둥");
		
		if (no > 1) {
			move(no - 1, 6 - x - y, y);
		}
	}

	public static void main(String[] args) {
		HanoiTest ht= new HanoiTest();
		ht.move(3, 1, 3);
	}
}
